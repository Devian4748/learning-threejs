{"version":3,"file":"animations-itU91Wb4.js","sources":["../../src/pages/animations/script.js"],"sourcesContent":["import * as THREE from \"three\";\nimport gsap from \"gsap\";\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Main\nconst main = document.querySelector(\"main\");\n\n// Scene\nconst scene = new THREE.Scene();\n\n// Object\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\nconst mesh = new THREE.Mesh(geometry, material);\nscene.add(mesh);\n\n// Sizes\nconst sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\n// Camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height);\ncamera.position.z = 3;\nscene.add(camera);\n\n// Renderer\nconst renderer = new THREE.WebGLRenderer({\n  canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\n\n// Animations\n\ngsap.to(mesh.position, { duration: 1, delay: 1, x: 2 });\ngsap.to(mesh.position, { duration: 1, delay: 2, x: 0 });\n\n// Tick 1\n// const tick = () => {\n//   // Update objects\n//   mesh.rotation.y += 0.02;\n//   // Render\n//   renderer.render(scene, camera);\n//   window.requestAnimationFrame(tick);\n// };\n\n// Tick 2\n// let time = Date.now();\n// const tick = () => {\n//   const currentTime = Date.now();\n//   const deltaTime = currentTime - time;\n//   time = currentTime;\n\n//   // Update Objects\n//   mesh.rotation.x += 0.001 * deltaTime;\n\n//   // Render\n//   renderer.render(scene, camera);\n\n//   window.requestAnimationFrame(tick);\n// };\n\n// Tick 3\nconst clock = new THREE.Clock();\nconst tick = () => {\n  // Update Objects\n  const elapsedTime = clock.getElapsedTime();\n\n  mesh.rotation.y = Math.cos(elapsedTime);\n  mesh.rotation.x = Math.sin(elapsedTime);\n  // camera.lookAt(mesh.position);\n\n  // Render\n  renderer.render(scene, camera);\n\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\nwindow.addEventListener(\"resize\", () => {\n  sizes.width = window.innerWidth;\n  sizes.height = window.innerHeight;\n  camera.aspect = sizes.width / sizes.height;\n  camera.updateProjectionMatrix();\n  renderer.setSize(sizes.width, sizes.height);\n});\n"],"names":["canvas","scene","THREE.Scene","geometry","THREE.BoxGeometry","material","THREE.MeshBasicMaterial","mesh","THREE.Mesh","sizes","camera","THREE.PerspectiveCamera","renderer","THREE.WebGLRenderer","gsap","clock","THREE.Clock","tick","elapsedTime"],"mappings":"6JAGA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAGvC,SAAS,cAAc,MAAM,EAG1C,MAAMC,EAAQ,IAAIC,EAGZC,EAAW,IAAIC,EAAkB,EAAG,EAAG,CAAC,EACxCC,EAAW,IAAIC,EAAwB,CAAE,MAAO,QAAU,CAAA,EAC1DC,EAAO,IAAIC,EAAWL,EAAUE,CAAQ,EAC9CJ,EAAM,IAAIM,CAAI,EAGd,MAAME,EAAQ,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WACjB,EAGMC,EAAS,IAAIC,EAAwB,GAAIF,EAAM,MAAQA,EAAM,MAAM,EACzEC,EAAO,SAAS,EAAI,EACpBT,EAAM,IAAIS,CAAM,EAGhB,MAAME,EAAW,IAAIC,EAAoB,CACvC,OAAAb,CACF,CAAC,EACDY,EAAS,QAAQH,EAAM,MAAOA,EAAM,MAAM,EAI1CK,EAAK,GAAGP,EAAK,SAAU,CAAE,SAAU,EAAG,MAAO,EAAG,EAAG,CAAG,CAAA,EACtDO,EAAK,GAAGP,EAAK,SAAU,CAAE,SAAU,EAAG,MAAO,EAAG,EAAG,CAAG,CAAA,EA4BtD,MAAMQ,EAAQ,IAAIC,EACZC,EAAO,IAAM,CAEjB,MAAMC,EAAcH,EAAM,iBAE1BR,EAAK,SAAS,EAAI,KAAK,IAAIW,CAAW,EACtCX,EAAK,SAAS,EAAI,KAAK,IAAIW,CAAW,EAItCN,EAAS,OAAOX,EAAOS,CAAM,EAE7B,OAAO,sBAAsBO,CAAI,CACnC,EAEAA,IAEA,OAAO,iBAAiB,SAAU,IAAM,CACtCR,EAAM,MAAQ,OAAO,WACrBA,EAAM,OAAS,OAAO,YACtBC,EAAO,OAASD,EAAM,MAAQA,EAAM,OACpCC,EAAO,uBAAsB,EAC7BE,EAAS,QAAQH,EAAM,MAAOA,EAAM,MAAM,CAC5C,CAAC"}