{"version":3,"file":"fullscreenAndResizing-mRqtSq5y.js","sources":["../../src/pages/fullscreen-and-resizing/script.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/addons/controls/OrbitControls\";\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Main\nconst main = document.querySelector(\"main\");\n\n// Scene\nconst scene = new THREE.Scene();\n\n// Object\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\nconst mesh = new THREE.Mesh(geometry, material);\nscene.add(mesh);\n\n// Sizes\nconst sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\n// Camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height);\ncamera.position.z = 3;\nscene.add(camera);\n\n// Controls\nconst control = new OrbitControls(camera, canvas);\ncontrol.enableDamping = true;\n\n// Renderer\nconst renderer = new THREE.WebGLRenderer({\n  canvas,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrenderer.render(scene, camera);\n\n// Tick\nconst tick = () => {\n  // Update Control\n  control.update();\n  // Update Renderer\n  renderer.render(scene, camera);\n  // Request Next Frame\n  window.requestAnimationFrame(tick);\n};\n\ntick();\n\n/**\n * Window Event Handler\n */\n\n// Resize\nwindow.addEventListener(\"resize\", () => {\n  // Adapt window sizes\n  sizes.width = window.innerWidth;\n  sizes.height = window.innerHeight;\n  // Adapt camera's aspect ratio\n  camera.aspect = sizes.width / sizes.height;\n  camera.updateProjectionMatrix();\n  // Adapt renderer's size\n  renderer.setSize(sizes.width, sizes.height);\n  // Adapt renderer's aspect ratio\n  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n});\n\n// Fullscreen\n\nwindow.addEventListener(\"dblclick\", () => {\n  const fullscreenElement =\n    document.fullscreenElement || document.webkitFullscreenElement;\n  if (!fullscreenElement) {\n    if (canvas.requestFullscreen) {\n      canvas.requestFullscreen();\n    } else if (canvas.requestWebkitFullscreen) {\n      canvas.requestWebkitFullscreen();\n    }\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n});\n"],"names":["canvas","scene","THREE.Scene","geometry","THREE.BoxGeometry","material","THREE.MeshBasicMaterial","mesh","THREE.Mesh","sizes","camera","THREE.PerspectiveCamera","control","OrbitControls","renderer","THREE.WebGLRenderer","tick"],"mappings":"yJAIA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAGvC,SAAS,cAAc,MAAM,EAG1C,MAAMC,EAAQ,IAAIC,EAGZC,EAAW,IAAIC,EAAkB,EAAG,EAAG,CAAC,EACxCC,EAAW,IAAIC,EAAwB,CAAE,MAAO,QAAU,CAAA,EAC1DC,EAAO,IAAIC,EAAWL,EAAUE,CAAQ,EAC9CJ,EAAM,IAAIM,CAAI,EAGd,MAAME,EAAQ,CACZ,MAAO,OAAO,WACd,OAAQ,OAAO,WACjB,EAGMC,EAAS,IAAIC,EAAwB,GAAIF,EAAM,MAAQA,EAAM,MAAM,EACzEC,EAAO,SAAS,EAAI,EACpBT,EAAM,IAAIS,CAAM,EAGhB,MAAME,EAAU,IAAIC,EAAcH,EAAQV,CAAM,EAChDY,EAAQ,cAAgB,GAGxB,MAAME,EAAW,IAAIC,EAAoB,CACvC,OAAAf,CACF,CAAC,EACDc,EAAS,QAAQL,EAAM,MAAOA,EAAM,MAAM,EAC1CK,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAC3DA,EAAS,OAAOb,EAAOS,CAAM,EAG7B,MAAMM,EAAO,IAAM,CAEjBJ,EAAQ,OAAM,EAEdE,EAAS,OAAOb,EAAOS,CAAM,EAE7B,OAAO,sBAAsBM,CAAI,CACnC,EAEAA,IAOA,OAAO,iBAAiB,SAAU,IAAM,CAEtCP,EAAM,MAAQ,OAAO,WACrBA,EAAM,OAAS,OAAO,YAEtBC,EAAO,OAASD,EAAM,MAAQA,EAAM,OACpCC,EAAO,uBAAsB,EAE7BI,EAAS,QAAQL,EAAM,MAAOA,EAAM,MAAM,EAE1CK,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,CAC7D,CAAC,EAID,OAAO,iBAAiB,WAAY,IAAM,CAEtC,SAAS,mBAAqB,SAAS,wBAQnC,SAAS,eACX,SAAS,eAAc,EACd,SAAS,sBAClB,SAAS,qBAAoB,EAT3Bd,EAAO,kBACTA,EAAO,kBAAiB,EACfA,EAAO,yBAChBA,EAAO,wBAAuB,CASpC,CAAC"}